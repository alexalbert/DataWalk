{"version":3,"sources":["../src/about.js","../src/about.html","../src/animation-main.js","../src/app.js","../src/app.html","../src/environment.js","../src/main.js","../src/nav-bar.js","../src/nav-bar.html","../src/resources/index.js","../src/sparql.js","../src/sparql-adapter.js","../src/sparql.html","../src/styles.css","../src/topic-provider.js","../src/topics/sparql-movies.js","../src/topics/sparql-nobels.js","../src/topics/sparql-programing_languages.js"],"names":["About","configure","aurelia","use","standardConfiguration","developmentLogging","plugin","start","then","a","setRoot","App","TopicProvider","topicProvider","configureRouter","config","router","title","map","topics","Object","keys","i","length","topic","push","route","moduleId","PLATFORM","moduleName","nav","debug","testing","feature","environment","NavBar","bindable","globalResources","Sparql","SparqlAdapter","sparqlAdapter","entities","currentRadio","currentEntity","wasProcessing","isProcessing","data","firstRow","isMovingBack","history","activate","params","routeConfig","setTopic","getEntities","attached","$","material","init","META","determineActivationStrategy","activationStrategy","replace","sendInitialQuery","action","sendQuery","searchTerm","sendTableQuery","currentRow","key","filter","f","name","value","entity","that","querySparql","resp","pop","context","target","sort","index","undefined","some","el","ind","b","back","snapshot","slice","HttpClient","http","queryFunction","query","sparqlQuery","removeQuotes","queryUrl","ENDPOINT","PREFIXES","encode","console","log","jsonp","results","editResponse","content","bindings","row","type","err","str","SparqlMovies","SparqlProgramingLanguages","SparqlNobels","sparqlMovies","sparqlProgramingLanguages","sparqlNobels1","sparqlNobels2","showWiki","sparqlNobels","sparqlNobelsWiki","filmsOfDirector","filmsOfActor","actorsOfFilm","directorsOfFilm","names","split","unshift","firstName","encodeURI","lastName","film","response","withWiki","byCategory","byYear","byCountry","WIKI_CLAUSE1","WIKI_CLAUSE2","year","country","category","influenced","influencedBy","language","json","JSON","stringify","edited","parse"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { activationStrategy } from 'aurelia-router';\r\n\r\nexport class About {\r\n}","<template>\r\n  <div class=\"container\">\r\n    <section class=\"au-animate\">\r\n      <h1 class='text-primary'>DataWalk</h1>\r\n      <br>\r\n      <p>A demo app using\r\n        <a href=\"http://www.aurelia.io/\" target='_blank'>Aurelia</a>,\r\n        <a href=\"https://fezvrasta.github.io/bootstrap-material-design\" target=\"_blank \">material design theme for Boostrap</a>, and\r\n        <a href=\"http://www.w3.org/TR/rdf-sparql-query/\" target=\"_blank\">SPARQL</a>to retrieve data from\r\n        <a href=\"http://www.w3.org/RDF/\" target=\"_blank\">RDF</a>databases.</p>\r\n      <br>\r\n      <p>Pluggable modules describe interfaces to subsets of RDF data, generic view provides user interface.</p>\r\n      <br>\r\n      <p>Source code:\r\n        <a href=\"https://github.com/alexalbert/DataWalk \" target=\"_blank \">https://github.com/alexalbert/DataWalk</a>\r\n      </p>\r\n      <br>\r\n      <p>Built by:</p>\r\n      <h4>Alex Albert</h4>\r\n      <a href=\"mailto:albalex@gmail.com \" target=\"_blank \">albalex@gmail.com</a>\r\n    </section>\r\n  </div>\r\n</template>","export function configure(aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .developmentLogging()\r\n    .plugin('aurelia-animator-css');\r\n\r\n  aurelia.start().then(a => a.setRoot());\r\n}\r\n","import {PLATFORM} from 'aurelia-pal';\r\nimport {inject} from 'aurelia-framework';\r\nimport {TopicProvider} from './topic-provider';\r\n\r\n  @inject(TopicProvider)\r\n  export class App {\r\n\r\n    constructor(topicProvider){\r\n      this.topicProvider = topicProvider;\r\n    }\r\n     \r\n    configureRouter(config, router){\r\n      config.title = 'Data Walk';\r\n  \r\n      var map = [];\r\n  \r\n      var topics = Object.keys(this.topicProvider.topics());\r\n  \r\n       for (let i = 0; i < topics.length; i++) {\r\n         var topic = topics[i];\r\n         map.push({ \r\n          route:  (i == 0) ? ['', topic] : topic,  \r\n          moduleId: PLATFORM.moduleName('sparql'), \r\n          nav: true, \r\n          title: topic });\r\n      }\r\n      \r\n      map.push({route: 'about', moduleId: PLATFORM.moduleName('about'), nav: true, title: 'About'})\r\n  \r\n      config.map(map);\r\n  \r\n      this.router = router;\r\n    }\r\n    // configureRouter(config, router){\r\n    //   config.title = 'Contacts';\r\n    //   config.map([\r\n    //     { route: '',              moduleId: PLATFORM.moduleName('no-selection'),   title: 'Select' },\r\n    //     { route: 'contacts/:id',  moduleId: PLATFORM.moduleName('contact-detail'), name:'contacts' }\r\n    //   ]);\r\n  \r\n    //   this.router = router;\r\n    // }\r\n  }\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n// import 'bootstrap';\r\n// import 'bootstrap/css/bootstrap.css!';\r\n// import {inject} from 'aurelia-framework';\r\n// import {TopicProvider} from './topic-provider' ;\r\n\r\n// @inject(TopicProvider)\r\n// export class App {\r\n\r\n//   constructor(topicProvider){\r\n//     this.topicProvider = topicProvider;\r\n//   }\r\n   \r\n//   configureRouter(config, router){\r\n//     config.title = 'Data Walk';\r\n\r\n//     var map = [];\r\n\r\n//     var topics = Object.keys(this.topicProvider.topics());\r\n\r\n//      for (let i = 0; i < topics.length; i++) {\r\n//        var topic = topics[i];\r\n//        map.push({ \r\n//         route:  (i == 0) ? ['', topic] : topic,  \r\n//         moduleId: './sparql', \r\n//         nav: true, \r\n//         title: topic });\r\n//     }\r\n    \r\n//     map.push({route: 'about', moduleId: './about', nav: true, title: 'About'})\r\n\r\n//     config.map(map);\r\n\r\n//     this.router = router;\r\n//   }\r\n// }\r\n","<template>\r\n  <head>\r\n    <title>Data Walk</title>\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    </head> \r\n  \r\n  <require from='./nav-bar'></require>\r\n  \r\n  <require from=\"../styles/material-ripples.min.css\"></require>\r\n  <require from=\"bootstrap/dist/css/bootstrap.min.css\"></require>\r\n  <require from=\"font-awesome/css/font-awesome.min.css\"></require>\r\n  <require from=\"../styles/styles.css\"></require>\r\n  <require from=\"../styles/material-fullpalette-custom.css\"></require>\r\n  styles\\material-fullpalette-custom.css\r\n\r\n\r\n  <nav-bar router.bind=\"router\"></nav-bar>\r\n\r\n  <div class=\"page-host\">\r\n    <router-view></router-view>\r\n  </div>\r\n<script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-material-design/0.3.0/js/material.min.js\"></script>\r\n<script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-material-design/0.3.0/js/ripples.min.js\"></script>\r\n</template>\r\n","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n","// regenerator-runtime is to support async/await syntax in ESNext.\r\n// If you don't use async/await, you can remove regenerator-runtime.\r\nimport 'regenerator-runtime/runtime';\r\n// import * as environment from '../config/environment.json';\r\nimport environment from './environment';\r\n\r\nimport {PLATFORM} from 'aurelia-pal';\r\n\r\nexport function configure(aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature(PLATFORM.moduleName('resources/index'));\r\n\r\n  aurelia.use.developmentLogging(environment.debug ? 'debug' : 'warn');\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin(PLATFORM.moduleName('aurelia-testing'));\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot(PLATFORM.moduleName('app')));\r\n}\r\n","import {bindable} from 'aurelia-framework';\r\n\r\nexport class NavBar {\r\n  @bindable router = null;\r\n}\r\n","<template>\r\n  <nav class=\"navbar navbar-default navbar-fixed-top\" role=\"navigation\">\r\n    <div class=\"navbar-header\">\r\n      <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\">\r\n        <span class=\"sr-only\">Toggle Navigation</span>\r\n        <span class=\"icon-bar\"></span>\r\n        <span class=\"icon-bar\"></span>\r\n        <span class=\"icon-bar\"></span>\r\n      </button>\r\n      <a class=\"navbar-brand\" href=\"#\">\r\n        <i class=\"fa fa-home\"></i>\r\n        <span>${router.title}</span>\r\n      </a>\r\n    </div>\r\n\r\n    <div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\r\n      <ul class=\"nav navbar-nav\">\r\n        <li repeat.for=\"row of router.navigation\" class=\"${row.isActive ? 'active' : ''}\">\r\n          <a data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1.in\" href.bind=\"row.href\">${row.title}</a>\r\n        </li>\r\n      </ul>\r\n\r\n      <ul class=\"nav navbar-nav navbar-right\">\r\n        <li class=\"loader\" if.bind=\"router.isNavigating\">\r\n          <i class=\"fa fa-spinner fa-spin fa-2x\"></i>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </nav>\r\n</template>\r\n","export function configure(config) {\r\n   config.globalResources([]);\r\n}\r\n","import { inject } from 'aurelia-framework';\r\nimport { activationStrategy } from 'aurelia-router';\r\nimport { computedFrom } from 'aurelia-framework';\r\nimport { TopicProvider } from './topic-provider' ;\r\nimport { SparqlAdapter } from './sparql-adapter' ;\r\n\r\n\r\n@inject(TopicProvider, SparqlAdapter)\r\nexport class Sparql {\r\n\r\n  entities;\r\n  currentRadio;\r\n  currentEntity;\r\n  title;\r\n  sparqlAdapter;\r\n  wasProcessing;\r\n  isProcessing;\r\n  data;\r\n  firstRow;\r\n  isMovingBack;\r\n  history;\r\n\r\n  constructor(topicProvider, sparqlAdapter) {\r\n    this.topicProvider = topicProvider;\r\n    this.sparqlAdapter = sparqlAdapter;\r\n  }\r\n\r\n activate(params, routeConfig) {\r\n    this.topic = this.topicProvider.topics()[routeConfig.title];\r\n    this.sparqlAdapter.setTopic(this.topic);\r\n    this.entities = this.getEntities();\r\n    this.currentRadio = this.entities[0];\r\n    this.currentEntity = this.entities[0];\r\n    this.wasProcessing = false;\r\n    this.isProcessing = false;\r\n    this.isMovingBack = false;\r\n    this.history = [];\r\n  }\r\n\r\n  attached() {\r\n    $.material.init();\r\n  }\r\n\r\n  getEntities() {\r\n    return Object.keys(this.topic.META);\r\n  }\r\n\r\n  determineActivationStrategy() {\r\n    return activationStrategy.replace;\r\n  }\r\n\r\n  @computedFrom('currentRadio')\r\n  get searchActions() {\r\n    return Object.keys(this.topic.META[this.currentRadio]);\r\n  }\r\n\r\n  @computedFrom('currentEntity')\r\n  get tableActions() {\r\n    return Object.keys(this.topic.META[this.currentEntity]);\r\n  }\r\n\r\n  sendInitialQuery(action) {\r\n    return this.sendQuery(this.currentRadio, action, this.searchTerm);\r\n  }\r\n\r\n  sendTableQuery(action, currentRow) {\r\n    let key = this.topic.META[this.currentEntity][action].key;\r\n    let searchTerm;\r\n    if (key) {\r\n      searchTerm = \r\n      currentRow.filter(f => {return (f.name === key)} )[0].value;\r\n    } else {\r\n      searchTerm = currentRow[0].value;\r\n    }\r\n    return this.sendQuery(this.currentEntity, action, searchTerm);\r\n  }\r\n  \r\n  sendQuery(entity, action, searchTerm) {\r\n    if (!searchTerm) return;\r\n    \r\n    this.wasProcessing = true;\r\n    this.isProcessing = true;\r\n    \r\n    let that = this;\r\n    return this.sparqlAdapter.querySparql(searchTerm, entity, action).\r\n      then(resp => {\r\n            if (resp) {\r\n                if (that.isMovingBack) {\r\n                  that.history.pop();\r\n                }\r\n                that.isMovingBack = false;\r\n                // Push previous frame to history\r\n                if (that.data) {\r\n                  that.history.push({ data: that.data, entity: that.currentEntity,\r\n                                    title: that.title, firstRow: that.firstRow });\r\n                }\r\n                \r\n                that.data = resp;\r\n                that.firstRow = that.data[0];\r\n                \r\n                let context = that.topic.META[entity][action];\r\n                that.title = context.title.replace(/REPLACE_ME/, searchTerm);\r\n                that.currentEntity = context.target;\r\n\r\n                that.searchTerm = null;\r\n                that.isProcessing = false;\r\n            }\r\n        });\r\n  }\r\n  \r\n sort(name) {\r\n    let index = undefined;\r\n    this.firstRow.some((el, ind) => {\r\n      index = ind;\r\n      return el.name === name; \r\n    });\r\n    \r\n    if (index == undefined) return;\r\n    \r\n    this.data.sort((a, b) => {\r\n      if (a[index].value < b[index].value)\r\n        return -1;\r\n      if (a[index].value > b[index].value)\r\n        return 1;\r\n      return 0\r\n    });\r\n  }\r\n\r\n  back() {\r\n    if (this.isMovingBack) {\r\n      // Drop last frame\r\n      this.history.pop();\r\n    }\r\n\r\n    this.isMovingBack = true;\r\n   \r\n    const snapshot = this.history.slice(-1)[0];\r\n    if (snapshot !== undefined) {\r\n      this.currentEntity = snapshot.entity;\r\n      this.data = snapshot.data;\r\n      this.title = snapshot.title;\r\n      this.firstRow = snapshot.firstRow;\r\n    }\r\n  }\r\n}","import { inject } from 'aurelia-framework';\r\nimport { HttpClient } from 'aurelia-http-client';\r\n\r\n@inject(HttpClient)\r\nexport class SparqlAdapter {\r\n    http;\r\n    topic;\r\n\r\n    constructor(http) {\r\n        this.http = http;\r\n    }\r\n\r\n    setTopic(topic) {\r\n        this.topic = topic;\r\n    }\r\n\r\n    querySparql(searchTerm, entity, action) {\r\n        let queryFunction = this.topic.META[entity][action].query;\r\n        let sparqlQuery = queryFunction(this.removeQuotes(searchTerm), this.topic);\r\n        let queryUrl = `${this.topic.ENDPOINT}?query=${this.topic.PREFIXES}${sparqlQuery}`;\r\n\r\n        queryUrl = this.encode(queryUrl);\r\n        queryUrl = queryUrl + \"&output=json\";\r\n        console.log(queryUrl);\r\n\r\n        return this.http.jsonp(queryUrl, 'callback')\r\n            .then(resp => {\r\n            const results = this.topic.editResponse(resp.content.results);\r\n\r\n            const data = results.bindings.map(row => {        // Map rows\r\n                return Object.keys(row).map(key => {          // Map fields of a row\r\n                    return { 'name': key, 'type': row[key].type, 'value': row[key].value };\r\n                });\r\n            });\r\n\r\n            console.log(data);\r\n\r\n            return data;\r\n        }, err => {\r\n                console.log(err);\r\n                return null;\r\n            });\r\n    }\r\n\r\n    // Encode some characters to make SPARQL happy\r\n    encode(str) {\r\n        return str.replace(/#/g, \"%23\").\r\n            replace(/&/g, \"%26\").\r\n            replace(/ /g, \"%20\").\r\n            replace(/</g, \"%3C\").\r\n            replace(/[\\n\\r]/g, '');\r\n    }\r\n\r\n    // Remove  quotes as they break enclosing quotes in resulting query\r\n    removeQuotes(str) {\r\n        return str.replace(/'/g, \"\")\r\n    }\r\n}\r\n","<template>\r\n  <section class=\"au-animate\">\r\n    <div class='container'>\r\n      <div class='span12'>\r\n        <br>\r\n        <p class='text-primary'>${topic.description}</p>\r\n        <div class=\"row\" show.bind=\"entities.length > 1\"> \r\n          <div repeat.for=\"en of entities\" class=\"radio radio-info pull-left\" style=\"margin-top: 10px\">\r\n            <label>\r\n              <input type=\"radio\" name=\"en\" value.bind=\"en\" checked.bind=\"$parent.currentRadio\" />${en}</label>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div>\r\n            <form class=\"navbar-form navbar-left form-control\">\r\n              <input type=\"text\" value.bind=\"searchTerm\" class=\"form-control  col-xs-2\" placeholder=\"${currentRadio}\" id=\"search\">\r\n            </form>\r\n          </div>\r\n          <div class=\"btn-toolbar\">\r\n            <a repeat.for=\"action of searchActions\" click.trigger='$parent.sendInitialQuery(action)' class=\"btn  btn-info btn-sm\">${action}</a>\r\n          </div>\r\n        </div>\r\n        <div show.bind=\"isProcessing\" class=\"spinner\">\r\n          <i class=\"fa fa-spinner fa-spin fa-3x\"></i>\r\n        </div>\r\n        <div show.bind=\"!isProcessing\" class=\"row\">\r\n          <h3 if.bind=\"data.length\" class=\"pull-left\" style=\"margin-bottom: 20px\">${title} - ${data.length} found</h3>\r\n          <button show.bind=\"history.length && (history.length > 1 || !isMovingBack)\" \r\n                  click.trigger=\"back()\" class=\"btn btn-primary btn-flat pull-right\">\r\n            <i class=\"fa fa-undo fa-2x\"></i>\r\n          </button>\r\n        </div>\r\n        <h4 show.bind=\"wasProcessing && !isProcessing && !data.length\">No results found</h4>\r\n        <div show.bind=\"!isProcessing && data.length\" class=\"table-responsive\">\r\n          <table class=\"table table-condensed table-hover\">\r\n            <tr class=\"info\">\r\n              <th  repeat.for=\"cell of firstRow\">\r\n                <h4 if.bind=\"cell.type !== 'uri'\"  class=\"btn btn-flat btn-primary\"\r\n                  click.trigger='$parent.sort(cell.name)'>${cell.name}</h4>\r\n              </th>\r\n              <th repeat.for=\"a of tableActions\"></th>\r\n            </tr>\r\n            <tbody>\r\n              <tr class='info' repeat.for=\"row of data\">\r\n                <td repeat.for=\"cell of row\">\r\n                  <label if.bind=\"cell.type !== 'uri'\" style=\"padding-top: 20px; color: @purple\">${cell.value}</label>\r\n                  <a if.bind=\"cell.type === 'uri'\" href=\"${cell.value}\" target=\"_blank\" class=\"btn btn-flat  btn-info\">${cell.name}</a>\r\n                </td>\r\n                <td repeat.for=\"action of $parent.tableActions\">\r\n                  <a click.trigger='$parent.$parent.sendTableQuery(action, $parent.row)' class=\"btn btn-flat  btn-primary\">${action}</a>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <br/>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</template>\r\n","body {\r\n  margin: 0;\r\n}\r\n\r\n.splash {\r\n    text-align: center;\r\n    margin: 10% 0 0 0;\r\n    box-sizing: border-box;\r\n}\r\n\r\n.splash .message {\r\n    font-size: 48px;\r\n    line-height: 48px;\r\n    text-shadow: rgba(0, 0, 0, 0.5) 0 0 15px;\r\n    text-transform: uppercase;\r\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\r\n}\r\n\r\n.splash .fa-spinner {\r\n    text-align: center;\r\n    display: inline-block;\r\n    font-size: 72px;\r\n    margin-top: 50px;\r\n}\r\n\r\n.page-host {\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    top: 50px;\r\n    bottom: 0;\r\n    overflow-x: hidden;\r\n    overflow-y: auto;\r\n}\r\n\r\nsection {\r\n    margin: 0 20px;\r\n}\r\n\r\n.navbar-nav li.loader {\r\n    margin: 12px 24px 0 6px;\r\n}\r\n\r\n/*.pictureDetail {\r\n    max-width: 425px;\r\n}*/\r\n\r\n/* animate page transitions */\r\nsection.au-enter-active {\r\n  -webkit-animation: fadeInRight 1s;\r\n  animation: fadeInRight 1s;\r\n}\r\n\r\n/* animation definitions */\r\n@-webkit-keyframes fadeInRight {\r\n  0% {\r\n    opacity: 0;\r\n    -webkit-transform: translate3d(100%, 0, 0);\r\n    transform: translate3d(100%, 0, 0)\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n    -webkit-transform: none;\r\n    transform: none\r\n  }\r\n}\r\n\r\n@keyframes fadeInRight {\r\n  0% {\r\n    opacity: 0;\r\n    -webkit-transform: translate3d(100%, 0, 0);\r\n    -ms-transform: translate3d(100%, 0, 0);\r\n    transform: translate3d(100%, 0, 0)\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n    -webkit-transform: none;\r\n    -ms-transform: none;\r\n    transform: none\r\n  }\r\n}\r\n\r\n\r\n@-webkit-keyframes fadeIn {\r\n  0% {\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n@keyframes fadeIn {\r\n  0% {\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n/*.table > tbody > tr > td {\r\n     vertical-align: middle;\r\n}*/\r\n","import {inject} from 'aurelia-framework';\nimport {SparqlMovies} from './topics/sparql-movies' ;\nimport {SparqlProgramingLanguages} from './topics/sparql-programing_languages' ;\nimport {SparqlNobels} from './topics/sparql-nobels' ;\n\n@inject(SparqlMovies, SparqlProgramingLanguages, SparqlNobels, SparqlNobels)\nexport class TopicProvider {\n\n  constructor(sparqlMovies, sparqlProgramingLanguages, sparqlNobels1, sparqlNobels2){\n    this.sparqlMovies = sparqlMovies;\n    this.sparqlProgramingLanguages = sparqlProgramingLanguages;\n    sparqlNobels1.showWiki = false;\n    this.sparqlNobels = sparqlNobels1;\n    sparqlNobels2.showWiki = true;;\n    this.sparqlNobelsWiki = sparqlNobels2;\n  }\n  topics() {\n    return{\n      \"Movies\": this.sparqlMovies,\n      \"Programing Languages\": this.sparqlProgramingLanguages,\n      \"Nobel Prizes\": this.sparqlNobels,\n      // \"Nobel Prizes (slower)\": this.sparqlNobelsWiki\n    };\n  }\n}\n","export class SparqlMovies {\r\n  \r\n  get description() {\r\n    return 'Source: wiki.dbpedia.org.';\r\n  }\r\n\r\n  filmsOfDirector(name) {\r\n    let names = name.split(',');\r\n    if (names.length === 1) {\r\n      names.unshift('');\r\n    }\r\n    let firstName = encodeURI(names[0]);\r\n    let lastName = encodeURI(names[1]);\r\n\r\n    return `SELECT DISTINCT ?Film  ?Wiki WHERE {\r\n    ?f rdf:type dbpedia-owl:Film .\r\n    ?f dbpedia-owl:director ?director .\r\n    ?f  rdfs:label ?Film .\r\n    ?f foaf:isPrimaryTopicOf ?Wiki .\r\n    ?director a dbpedia-owl:Person .\r\n    ?director rdfs:label ?name .\r\n    ?name   bif:contains  '\"${lastName}\"' .\r\n    FILTER (langMatches(lang(?Film), \"EN\")\r\n     &&  regex(str(?name), \"^${firstName}.*\", 'i')).\r\n    }`;\r\n  }\r\n\r\n  filmsOfActor(name) {\r\n    let names = name.split(',');\r\n    if (names.length === 1) {\r\n      names.unshift('');\r\n    }\r\n    let firstName = encodeURI(names[0]);\r\n    let lastName = encodeURI(names[1]);\r\n\r\n    return `SELECT DISTINCT ?Film  ?Wiki WHERE {\r\n    ?f rdf:type dbpedia-owl:Film .\r\n    ?f dbpedia-owl:starring ?actor .\r\n    ?f  rdfs:label ?Film .\r\n    ?f foaf:isPrimaryTopicOf ?Wiki .\r\n    ?actor a dbpedia-owl:Person .\r\n    ?actor rdfs:label ?name .\r\n    ?name   bif:contains  '\"${lastName}\"' .\r\n    FILTER (langMatches(lang(?Film), \"EN\")\r\n     &&  regex(str(?name), \"^${firstName}\", 'i')\r\n     && !regex(str(?name), \".*,.*\")) .\r\n    }`;\r\n  }\r\n\r\n  actorsOfFilm(film) {\r\n\r\n    return `SELECT DISTINCT ?Actor ?Wiki WHERE {\r\n    ?f rdf:type dbpedia-owl:Film .\r\n    ?f  rdfs:label ?Film .\r\n\t  ?f  dbo:starring ?a .\r\n    ?a rdfs:label ?Actor .\r\n    ?a foaf:isPrimaryTopicOf ?Wiki .\r\n    ?Film bif:contains  '\"${film}\"' .\r\n    FILTER (langMatches(lang(?Actor), \"EN\")) .\r\n    }`;\r\n  }\r\n\r\n  directorsOfFilm(film) {\r\n\r\n    return `SELECT DISTINCT ?Director ?Wiki   WHERE {\r\n    ?f rdf:type dbpedia-owl:Film .\r\n    ?f  rdfs:label ?Film .\r\n    ?Film bif:contains  '\"${film}\"' .\r\n    ?f dbpedia-owl:director ?d .\r\n    ?d rdfs:label ?Director .\r\n    ?d foaf:isPrimaryTopicOf ?Wiki .\r\n    FILTER (langMatches(lang(?Director), \"EN\")) .\r\n    }`;\r\n  }\r\n\r\n  ENDPOINT = \"http://dbpedia.org/sparql\";\r\n\r\n  PREFIXES = `PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\n    PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\n    PREFIX foaf:  <http://xmlns.com/foaf/0.1/>\r\n    PREFIX owl: <http://www.w3.org/2002/07/owl#>\r\n    PREFIX rr: <http://www.w3.org/ns/r2rml#>\r\n    PREFIX dbpedia: <http://dbpedia.org/resource/>\r\n    PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>\r\n    PREFIX db: <http://dbpedia.org/>\r\n    PREFIX dbp: <http://dbpedia.org/property/>\r\n  `;\r\n\r\n  editResponse(response) {\r\n    return response;\r\n  }\r\n\r\n  META = {\r\n    'Director': {\r\n            'Films':\r\n            { target: 'Film', title: 'Films of REPLACE_ME', query: this.filmsOfDirector }\r\n        },\r\n    'Actor': {\r\n            'Films':\r\n            { target: 'Film', title: 'Films of REPLACE_ME', query: this.filmsOfActor },\r\n        },\r\n    'Film': {\r\n            'Actors':\r\n            { target: 'Actor', title: 'Actors in REPLACE_ME', query: this.actorsOfFilm },\r\n            'Director':\r\n            { target: 'Director', title: 'Director of REPLACE_ME', query: this.directorsOfFilm }\r\n        }\r\n  };\r\n}\r\n","import { transient, inject } from 'aurelia-framework';\n\n@transient()\nexport class SparqlNobels {\n\n  withWiki = false;\n\n  set showWiki(showWiki) {\n    this.withWiki = showWiki;\n  }\n\n  get description() {\n    return this.withWiki ? 'Source: data.nobelprize.org and wiki.dbpedia.org.' :\n                           'Source: data.nobelprize.org.';\n  }\n\n  query(filter, withWiki) {\n    let WIKI_CLAUSE1 = this.withWiki ? ` SERVICE <http://dbpedia.org/sparql?default-graph-uri=http://dbpedia.org>\n      {\n        ?wklink foaf:isPrimaryTopicOf ?Wiki .\n      }` : \"\";\n\n    let WIKI_CLAUSE2 = this.withWiki ? ` ?p owl:sameAs ?wklink .` : \"\";\n\n    return `SELECT DISTINCT ?Name ?Category ?Year ?Country ?Wiki WHERE {\n      ?p rdfs:label ?Name .\n      ?p nobel:nobelPrize ? ?np .\n      ?np nobel:year ?Year .\n      ?p dbpedia-owl:birthPlace ?placeOfBirth .\n      ?placeOfBirth rdf:type dbpedia-owl:Country .\n      ?placeOfBirth rdfs:label ?Country .\n      ?np nobel:category ?npcategory .\n      ?npcategory rdfs:label ?Category .\n      ${WIKI_CLAUSE2}\n      FILTER(${filter}) .\n      ${WIKI_CLAUSE1}\n      }`;\n  }\n\n  byYear(year, that) {\n    return that.query(`?Year = ${year}`);\n  }\n\n  byCountry(country, that) {\n    return that.query(`?Country = '${country}'`);\n  }\n\n  byCategory(category, that) {\n    return that.query(`?Category = '${category}'`);\n  }\n\n\n  ENDPOINT = \"http://data.nobelprize.org/sparql\";\n\n  PREFIXES = `PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>\n  PREFIX nobel: <http://data.nobelprize.org/terms/>\n  PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n  PREFIX yago: <http://yago-knowledge.org/resource/>\n  PREFIX viaf: <http://viaf.org/viaf/>\n  PREFIX meta: <http://www4.wiwiss.fu-berlin.de/bizer/d2r-server/metadata#>\n  PREFIX dcterms: <http://purl.org/dc/terms/>\n  PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n  PREFIX d2r: <http://sites.wiwiss.fu-berlin.de/suhl/bizer/d2r-server/config.rdf#>\n  PREFIX dbpedia: <http://dbpedia.org/resource/>\n  PREFIX owl: <http://www.w3.org/2002/07/owl#>\n  PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n  PREFIX map: <http://data.nobelprize.org/resource/#>\n  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n  PREFIX freebase: <http://rdf.freebase.com/ns/>\n  PREFIX dbpprop: <http://dbpedia.org/property/>\n  PREFIX skos: <http://www.w3.org/2004/02/skos/core#>\n  `;\n\n  editResponse(response) {\n    return response;\n  }\n\n  META = {\n    'Search by =>': {\n      'Category':\n      { target: 'Search by =>', title: 'Nobel laureates in REPLACE_ME', key: 'Category', query: this.byCategory },\n\n      'Year':\n      { target: 'Search by =>', title: 'REPLACE_ME Nobel laureates', key: 'Year', query: this.byYear },\n\n      'Country':\n      { target: 'Search by =>', title: 'Nobel laureates born in REPLACE_ME', key: 'Country', query: this.byCountry }\n\n    },\n  };\n}\n","export class SparqlProgramingLanguages {\r\n\r\n  get description() {\r\n    return 'Source: wiki.dbpedia.org.';\r\n  }\r\n\r\n  influencedBy(language) {\r\n    return `SELECT DISTINCT ?Language ?Wiki WHERE {\r\n      ?l rdf:type dbpedia-owl:ProgrammingLanguage .\r\n      ?l rdfs:label ?name .\r\n      ?name bif:contains '\"${language}\"' .\r\n      ?l dbpedia-owl:influencedBy ?influencer .\r\n      ?influencer rdfs:label ?Language .\r\n      ?influencer foaf:isPrimaryTopicOf ?Wiki .\r\n      FILTER (langMatches(lang(?Language), \"EN\")  ).\r\n    }`;\r\n  }\r\n\r\n  influenced(language) {\r\n    return `SELECT DISTINCT ?Language ?Wiki WHERE {\r\n      ?l rdf:type dbpedia-owl:ProgrammingLanguage .\r\n      ?l rdfs:label ?name .\r\n      ?name bif:contains '\"${language}\"' .\r\n      ?l dbpedia-owl:influenced ?influencee .\r\n      ?influencee rdfs:label ?Language .\r\n      ?influencee foaf:isPrimaryTopicOf ?Wiki .\r\n      FILTER (langMatches(lang(?Language), \"EN\")  ).\r\n    }`;\r\n  }\r\n\r\n  editResponse(json) {\r\n    var str = JSON.stringify(json);\r\n    var edited = str.replace(/\\(programming language\\)/g, \"\");\r\n    return JSON.parse(edited);\r\n  }\r\n\r\n  ENDPOINT = \"http://dbpedia.org/sparql\";\r\n\r\n  PREFIXES =\r\n    `PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\n    PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\n    PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>\r\n    PREFIX foaf:  <http://xmlns.com/foaf/0.1/>`;\r\n\r\n\r\n  /**\r\n   The model is :\r\n   source_entity  : { relationship_type_1: [target_entity_1, function_1], \r\n                    relationship_type_2: [target_entity_2, function_2]\r\n                    ... \r\n                  }\r\n   ...                  \r\n  **/\r\n\r\n  META = {\r\n    'Language': {\r\n      'Influenced': { target: 'Language', title: 'REPLACE_ME influenced', query: this.influenced },\r\n      'Influenced by': { target: 'Language', title: 'REPLACE_ME is influenced by', query: this.influencedBy }\r\n    }\r\n  };\r\n}"]}